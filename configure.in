dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/liste.c)

AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_ISC_POSIX
AC_ARG_PROGRAM

#
# Making releases:
#   SU_MINOR_VERSION += 1;
#   SU_INTERFACE_AGE += 1;
#   SU_BINARY_AGE += 1;
# if any functions have been added, set SU_INTERFACE_AGE to 0.
# if backwards compatibility has been broken,
# set SU_BINARY_AGE _and_ SU_INTERFACE_AGE to 0.
#
SU_MAJOR_VERSION=2
SU_MINOR_VERSION=9
SU_INTERFACE_AGE=0
SU_BINARY_AGE=4
SU_VERSION=$SU_MAJOR_VERSION.$SU_MINOR_VERSION

AC_SUBST(SU_MAJOR_VERSION)
AC_SUBST(SU_MINOR_VERSION)
AC_SUBST(SU_VERSION)
AC_SUBST(SU_INTERFACE_AGE)
AC_SUBST(SU_BINARY_AGE)

# libtool versioning
LT_RELEASE=$SU_MAJOR_VERSION.$SU_MINOR_VERSION
LT_CURRENT=`expr $SU_MINOR_VERSION - $SU_INTERFACE_AGE`
LT_REVISION=$SU_INTERFACE_AGE
LT_AGE=`expr $SU_BINARY_AGE - $SU_INTERFACE_AGE`
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

VERSION=$SU_VERSION
PACKAGE=skyutils

# Auto Make
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE($PACKAGE,$VERSION)
AM_MAINTAINER_MODE

AM_PROG_LIBTOOL

CFLAGS="$CFLAGS -I../include"
if test "$GCC" = "yes"
then
  CFLAGS="$CFLAGS -Wall"
fi

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
dnl AC_CHECK_HEADERS(fcntl.h sys/ioctl.h sys/time.h unistd.h signal.h zlib.h bzlib.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_HEADER_TIME
AC_STRUCT_TM

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MEMCMP
AC_FUNC_VPRINTF
dnl AC_CHECK_FUNCS(gethostname select socket strdup strerror strstr sem_init strtok_r signal)

AC_ARG_ENABLE(debug,
[  --enable-debug          Enables debug option (default=no)],
[case "${enableval}" in
  yes) debug=true ;;
  no)  debug=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-debug) ;;
esac],[debug=false])
if test "$debug" = "true"; then
  CFLAGS="$CFLAGS ""-DDEBUG "
fi

AC_ARG_ENABLE(ansi,
[  --enable-ansi           Enables ansi color in debug messages (default=yes)],
[case "${enableval}" in
  yes) ansi=true ;;
  no)  ansi=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-ansi) ;;
esac],[ansi=true])
SU_ANSI_CFLAGS=""
if test "$ansi" = "true"; then
  SU_ANSI_CFLAGS="-DSU_ENABLE_ANSI_CODE"
  CFLAGS="$CFLAGS ""-DSU_ENABLE_ANSI_CODE "
fi

AC_ARG_ENABLE(trace_internal,
[  --enable-trace_internal Enables malloc trace debug of skyutils ifself (default=no)],
[case "${enableval}" in
  yes) trace_internal=true ;;
  no)  trace_internal=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-trace_internal) ;;
esac],[trace_internal=false])
if test "$trace_internal" = "true"; then
  CFLAGS="$CFLAGS ""-DSU_MALLOC_TRACE -DSU_TRACE_INTERNAL ";
fi

AC_ARG_ENABLE(reentrant,
[  --enable-reentrant      Enables reentrant functions of skyutils (default=yes)],
[case "${enableval}" in
  yes) reentrant=true ;;
  no)  reentrant=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-reentrant) ;;
esac],[reentrant=true])
SU_REENTRANT="no"
if test "$reentrant" = "true"; then
  CFLAGS="$CFLAGS ""-D_REENTRANT -pthread "
  SU_REENTRANT="yes"
fi

AC_ARG_ENABLE(cygwin,
[  --disable-cygwin        Disables cygwin mode with -mno-cygwin option of gcc (pure win32) (default=no)],
[case "${enableval}" in
  yes) cygwin=false ;;
  no)  cygwin=true ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-cygwin) ;;
esac],[cygwin=false])
SU_CYGWIN="no"
if test "$cygwin" = "true"; then
  if test `echo $OS | grep -i -c win` = 1; then
    CFLAGS="$CFLAGS -mno-cygwin "
    SU_CYGWIN="yes"
  else
    AC_MSG_WARN("--enable-cygwin option has been set but no windows OS detected")
  fi
fi

AC_ARG_ENABLE(ssl,
[  --enable-ssl            Enables SSL code in SkyWeb (for https) (default=yes)],
[case "${enableval}" in
  yes) ssl=true ;;
  no)  ssl=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-ssl) ;;
esac],[ssl=true])

dnl Checks for libraries.
SOLARIS=""
SU_PTHREAD_LIB=""
SU_PTHREAD_CFLAGS=""
AC_CHECK_LIB(socket, socket,SOLARIS="-lsocket -lnsl")
if test "$reentrant" = "true"; then
  AC_CHECK_LIB(pthread, pthread_create,SU_PTHREAD_LIB="-lpthread")
  AC_CHECK_LIB(c_r, pthread_create,SU_PTHREAD_LIB="-lc_r")

  if test ! "$SU_PTHREAD_LIB"; then
    AC_MSG_ERROR("Cannot find pthread functions \(neither in libpthread nor in libc_r\)")
  fi
  SU_PTHREAD_CFLAGS="-D_REENTRANT -pthread"
  if test "$SOLARIS"; then
    SOLARIS="$SOLARIS -lrt"
  fi
fi
AC_CHECK_LIB(dl, dlopen,SU_DL_LIB="-ldl")
AC_CHECK_LIB(c_r, dlopen,SU_DL_LIB="-lc_r")
SU_DL_CFLAGS=""
if test ! "$SU_DL_LIB"; then
  AC_MSG_WARN("Cannot find libdl... dynamic load functions will be disabled")
else
  SU_DL_CFLAGS="-DSU_USE_DL"
  CFLAGS="$CFLAGS $SU_DL_CFLAGS "
fi

SU_SSL_CFLAGS=""
if test "$ssl" = "true"; then
  AC_CHECK_LIB(ssl,SSL_library_init,SU_SSL_LIB="-lssl")
  if test ! "$SU_SSL_LIB"; then
    AC_MSG_WARN("Cannot find libssl... ssl code in skyweb will be disabled")
    ssl=false
  else
    SU_SSL_CFLAGS="-DSU_USE_SSL"
    CFLAGS="$CFLAGS $SU_SSL_CFLAGS "
  fi
fi

SU_ARCH_LIB=""
AC_CHECK_LIB(z, compress,Z_LIB="-lz")
if test ! "$Z_LIB"; then
  AC_MSG_WARN("Cannot find libz... archive routines will be disabled")
else
  AC_CHECK_LIB(bz2, BZ2_bzBuffToBuffCompress,BZ_LIB="-lbz2")
  if test ! "$BZ_LIB"; then
    AC_MSG_WARN("Cannot find libbz2... archive routines will be disabled")
  else
    SU_ARCH_CFLAGS="-DSU_USE_ARCH"
    CFLAGS="$CFLAGS $SU_ARCH_CFLAGS "
    SU_ARCH_LIB="-lz -lbz2"
  fi
fi


AC_SUBST(SU_PTHREAD_LIB)
AC_SUBST(SU_PTHREAD_CFLAGS)
AC_SUBST(SOLARIS)
AC_SUBST(SU_REENTRANT)
AC_SUBST(SU_DL_LIB)
AC_SUBST(SU_DL_CFLAGS)
AC_SUBST(SU_SSL_LIB)
AC_SUBST(SU_SSL_CFLAGS)
AC_SUBST(SU_ARCH_LIB)
AC_SUBST(SU_ARCH_CFLAGS)
AC_SUBST(SU_ANSI_CFLAGS)

AC_OUTPUT([
Makefile
skyutils-config
src/Makefile
src/Windows/Makefile
src/Windows/skyutils/Makefile
], [chmod +x skyutils-config])

echo ""
echo "***************************"
echo "*   Compilation options   *"
echo "***************************"
if test "$debug" = "true"; then
  tmp="ON"
else
  tmp="OFF"
fi
echo "Debug mode              : $tmp"
if test "$ansi" = "true"; then
  tmp="ON"
else
  tmp="OFF"
fi
echo "Ansi color mode         : $tmp"
if test "$trace_internal" = "true"; then
  tmp="ON"
else
  tmp="OFF"
fi
echo "Internal malloc trace   : $tmp"
if test "$reentrant" = "true"; then
  tmp="ON"
else
  tmp="OFF"
fi
echo "Reentrant capability    : $tmp"
if test "$cygwin" = "true"; then
  tmp="ON"
else
  tmp="OFF"
fi
echo "Cygwin -mno-cygwin      : $tmp"
if test "$ssl" = "true"; then
  tmp="ON"
else
  tmp="OFF"
fi
echo "SSL support             : $tmp"
echo
echo "Type 'make' to build skyutils library (try 'gmake' if it fails)"
echo
